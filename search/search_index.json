{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"docker/","text":"","title":"Docker"},{"location":"docs/","text":"mkdocs \u81ea\u5206\u306emkdocs\u306e\u30ea\u30dd\u30b8\u30c8\u30ea ak1ra memo git push\u3059\u308b\u3068\u3001travis ci\u3067\u81ea\u52d5\u7684\u306b\u9759\u7684\u30b5\u30a4\u30c8\u751f\u6210\uff06gh-pages\u30d6\u30e9\u30f3\u30c1\u306bpush \u4ee5\u4e0b\u306e .travis.yml \u3067master\u306bpush\u3055\u308c\u308b\u3068\u81ea\u52d5\u7684\u306bgh-pages\u30d6\u30e9\u30f3\u30c1\u306b\u7f6e\u3044\u3066\u304f\u308c\u308b language : python install : pip install - r requirements . txt script : mkdocs build -- verbose deploy : provider : pages skip_cleanup : true github_token : $GITHUB_TOKEN local_dir : site on : branch : master \u7de8\u96c6\u3059\u308b\u3068\u3053\u308d docs/ \u306bmarkdown\u306ewiki\u306e\u5185\u5bb9 mkdocs.yml \u306bpages\u3092\u8ffd\u52a0\u3059\u308b \u62e1\u5f35\u6a5f\u80fd\u306b\u3064\u3044\u3066 \u4f7f\u3044\u65b9 \u3092\u53c2\u7167 \u53c2\u8003 mkdocs\u306b\u3064\u3044\u3066 pandoc + Markdown \u74b0\u5883\u69cb\u7bc9 WSL Ubuntu 18.04 + VSCODE sudo apt update sudo apt install - y pandoc pandoc - citeproc ## Tex Packege sudo apt install texlive - luatex texlive - xetex texlive - lang - japanese - y sudo apt install texlive - lang - cjk xdvik - ja evince texlive - fonts - recommended texlive - fonts - extra - y ## Haskell sudo apt install haskell - platform - y sudo apt install cabal - install - y sudo cabal update sudo cabal install --global pandoc-crossref ## WSL\u306eUbuntu18. 04 \u3067\u884c\u3046\u3068\u3001\u30d5\u30a9\u30f3\u30c8\u304c\u306a\u3044\u306e\u304b\uff1f\u30a8\u30e9\u30fc\u3092\u5410\u3044\u3066\u3001\u4e00\u5411\u306b\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u305f\u3081\u3001 Windows\u306e\u30d1\u30b9\u4e0a\u3067\u884c\u3046 cd / mnt / c mkdir pandoc cd pandoc code . \u4e0a\u8a18\u3067VSCode\u4e0a\u3067markdown\u3092\u7de8\u96c6\u3057\u3066\u3001pdf\u3092\u751f\u6210\u3067\u304d\u308b \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210 $ tree . \u251c\u2500\u2500 config.yml \u251c\u2500\u2500 imgs \u2502 \u251c\u2500\u2500 sample1.png \u2502 \u251c\u2500\u2500 sample2.png \u2502 \u2514\u2500\u2500 sample3.png \u251c\u2500\u2500 makepdf.sh \u251c\u2500\u2500 myref01.bib \u251c\u2500\u2500 myref02.bib \u251c\u2500\u2500 paper.md \u251c\u2500\u2500 paper.pdf \u251c\u2500\u2500 sample.md \u2514\u2500\u2500 sample.pdf pandoc\u3067markdown -> latexpdf\u751f\u6210\u306eshell 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #!/bin/bash CMDNAME = ` basename $0 ` if [ $# -ne 1 ] ; then echo \"Usage: $CMDNAME filename\" 1 > & 2 exit 1 fi bibfiles = $( ls -F | grep bib ) echo 'bib files: ' $bibfiles pandoccmdtemplate = 'pandoc --pdf-engine=lualatex --toc -F pandoc-crossref -N -M \"crossrefYaml=config.yml\"' echo $pandoccmd pandoccmd = '' for bib in ${ bibfiles [@] } do addbib = ' --bibliography='${ bib } pandoccmdtemplate += ${ addbib } done pandoccmdtemplate += ' ' pandoccmdtemplate += $1 .md pandoccmdtemplate += ' -o ' pandoccmdtemplate += $1 .pdf echo $pandoccmdtemplate echo $1 .md to $1 .pdf ${ pandoccmdtemplate } echo Done --toc \u81ea\u52d5\u7684\u306b\u76ee\u6b21\u3092\u751f\u6210 -N \u756a\u53f7\u4ed8\u304d\u7bc0\u30d8\u30c3\u30c0\u30fc\u3092\u3064\u3051\u308b --bibliography \u53c2\u7167\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u53d6\u3063\u3066\u304f\u308c\u308b\u304c\u3001\u5909\u63db\u524d\u306emarkdown\u306bbib\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u66f8\u3044\u3066\u3082\u53cd\u5fdc\u3057\u306a\u3044 \u4eca\u56de\u306f\u3001 ls -F | grep bib \u3067\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53d6\u5f97\u3057\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u5168 .bib \u3092\u9069\u7528\u3055\u305b\u3066\u3044\u308b Failure config.yaml\u304c\u8aad\u307f\u8fbc\u307e\u308c\u3066\u304a\u3089\u305a\u3001fig\u306e\u307e\u307e\u306b\u306a\u3063\u3066\u3044\u308b \u53c2\u8003 https://qiita.com/Kumassy/items/5b6ae6b99df08fb434d9 https://qiita.com/SOhtsu/items/e921142372d0f4cce410","title":"Docs"},{"location":"docs/#mkdocs","text":"","title":"mkdocs"},{"location":"docs/#mkdocs_1","text":"ak1ra memo","title":"\u81ea\u5206\u306emkdocs\u306e\u30ea\u30dd\u30b8\u30c8\u30ea"},{"location":"docs/#git-pushtravis-cigh-pagespush","text":"\u4ee5\u4e0b\u306e .travis.yml \u3067master\u306bpush\u3055\u308c\u308b\u3068\u81ea\u52d5\u7684\u306bgh-pages\u30d6\u30e9\u30f3\u30c1\u306b\u7f6e\u3044\u3066\u304f\u308c\u308b language : python install : pip install - r requirements . txt script : mkdocs build -- verbose deploy : provider : pages skip_cleanup : true github_token : $GITHUB_TOKEN local_dir : site on : branch : master","title":"git push\u3059\u308b\u3068\u3001travis ci\u3067\u81ea\u52d5\u7684\u306b\u9759\u7684\u30b5\u30a4\u30c8\u751f\u6210\uff06gh-pages\u30d6\u30e9\u30f3\u30c1\u306bpush"},{"location":"docs/#_1","text":"docs/ \u306bmarkdown\u306ewiki\u306e\u5185\u5bb9 mkdocs.yml \u306bpages\u3092\u8ffd\u52a0\u3059\u308b","title":"\u7de8\u96c6\u3059\u308b\u3068\u3053\u308d"},{"location":"docs/#_2","text":"\u4f7f\u3044\u65b9 \u3092\u53c2\u7167","title":"\u62e1\u5f35\u6a5f\u80fd\u306b\u3064\u3044\u3066"},{"location":"docs/#_3","text":"mkdocs\u306b\u3064\u3044\u3066","title":"\u53c2\u8003"},{"location":"docs/#pandoc-markdown","text":"","title":"pandoc + Markdown"},{"location":"docs/#_4","text":"WSL Ubuntu 18.04 + VSCODE sudo apt update sudo apt install - y pandoc pandoc - citeproc ## Tex Packege sudo apt install texlive - luatex texlive - xetex texlive - lang - japanese - y sudo apt install texlive - lang - cjk xdvik - ja evince texlive - fonts - recommended texlive - fonts - extra - y ## Haskell sudo apt install haskell - platform - y sudo apt install cabal - install - y sudo cabal update sudo cabal install --global pandoc-crossref ## WSL\u306eUbuntu18. 04 \u3067\u884c\u3046\u3068\u3001\u30d5\u30a9\u30f3\u30c8\u304c\u306a\u3044\u306e\u304b\uff1f\u30a8\u30e9\u30fc\u3092\u5410\u3044\u3066\u3001\u4e00\u5411\u306b\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u305f\u3081\u3001 Windows\u306e\u30d1\u30b9\u4e0a\u3067\u884c\u3046 cd / mnt / c mkdir pandoc cd pandoc code . \u4e0a\u8a18\u3067VSCode\u4e0a\u3067markdown\u3092\u7de8\u96c6\u3057\u3066\u3001pdf\u3092\u751f\u6210\u3067\u304d\u308b","title":"\u74b0\u5883\u69cb\u7bc9"},{"location":"docs/#_5","text":"$ tree . \u251c\u2500\u2500 config.yml \u251c\u2500\u2500 imgs \u2502 \u251c\u2500\u2500 sample1.png \u2502 \u251c\u2500\u2500 sample2.png \u2502 \u2514\u2500\u2500 sample3.png \u251c\u2500\u2500 makepdf.sh \u251c\u2500\u2500 myref01.bib \u251c\u2500\u2500 myref02.bib \u251c\u2500\u2500 paper.md \u251c\u2500\u2500 paper.pdf \u251c\u2500\u2500 sample.md \u2514\u2500\u2500 sample.pdf","title":"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210"},{"location":"docs/#pandocmarkdown-latexpdfshell","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #!/bin/bash CMDNAME = ` basename $0 ` if [ $# -ne 1 ] ; then echo \"Usage: $CMDNAME filename\" 1 > & 2 exit 1 fi bibfiles = $( ls -F | grep bib ) echo 'bib files: ' $bibfiles pandoccmdtemplate = 'pandoc --pdf-engine=lualatex --toc -F pandoc-crossref -N -M \"crossrefYaml=config.yml\"' echo $pandoccmd pandoccmd = '' for bib in ${ bibfiles [@] } do addbib = ' --bibliography='${ bib } pandoccmdtemplate += ${ addbib } done pandoccmdtemplate += ' ' pandoccmdtemplate += $1 .md pandoccmdtemplate += ' -o ' pandoccmdtemplate += $1 .pdf echo $pandoccmdtemplate echo $1 .md to $1 .pdf ${ pandoccmdtemplate } echo Done --toc \u81ea\u52d5\u7684\u306b\u76ee\u6b21\u3092\u751f\u6210 -N \u756a\u53f7\u4ed8\u304d\u7bc0\u30d8\u30c3\u30c0\u30fc\u3092\u3064\u3051\u308b --bibliography \u53c2\u7167\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u53d6\u3063\u3066\u304f\u308c\u308b\u304c\u3001\u5909\u63db\u524d\u306emarkdown\u306bbib\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u66f8\u3044\u3066\u3082\u53cd\u5fdc\u3057\u306a\u3044 \u4eca\u56de\u306f\u3001 ls -F | grep bib \u3067\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53d6\u5f97\u3057\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u5168 .bib \u3092\u9069\u7528\u3055\u305b\u3066\u3044\u308b Failure config.yaml\u304c\u8aad\u307f\u8fbc\u307e\u308c\u3066\u304a\u3089\u305a\u3001fig\u306e\u307e\u307e\u306b\u306a\u3063\u3066\u3044\u308b","title":"pandoc\u3067markdown -&gt; latexpdf\u751f\u6210\u306eshell"},{"location":"docs/#_6","text":"https://qiita.com/Kumassy/items/5b6ae6b99df08fb434d9 https://qiita.com/SOhtsu/items/e921142372d0f4cce410","title":"\u53c2\u8003"},{"location":"howtowrite/","text":"How to write mkdocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs / index .md # The documentation homepage. ... # Other markdown pages, images and other files. \u8b66\u544a\u6587 Note \u3053\u308c\u306f\u30ce\u30fc\u30c8\u3067\u3059\u3002 Tip \u30d2\u30f3\u30c8\u3067\u3059\u3002 Warning \u3053\u308c\u306f\u8b66\u544a\u3067\u3059 Danger \u3053\u308c\u306f\u5371\u967a\u3067\u3059\u3002 Success \u3053\u308c\u306f\u6210\u529f\u3067\u3059\u3002 Failure \u3053\u308c\u306f\u5931\u6557\u3067\u3059\u3002 Bug \u3053\u308c\u306f\u30d0\u30b0\u3067\u3059\u3002 Summary \u3053\u308c\u306f\u6982\u8981\u3067\u3059\u3002 FontAwesome MkDocs \u5b9a\u7fa9 \u5b9a\u7fa9\u8a9e : \u3053\u3053\u306b\u8aac\u660e\u3092\u66f8\u304d\u307e\u3059 KeyBoard\u306e\u308f\u304b\u308a\u3084\u3059\u3044\u66f8\u304d\u65b9 Ctrl + Alt + Del Code Block package main import \"fmt\" func main() { fmt . Println( \"Hello World\" ) } Magic Link https://google.com Mark mark me smart==mark TaskList Task List item 1 item A item B more text item a item b item c item C item 2 item 3","title":"How to write mkdocs"},{"location":"howtowrite/#how-to-write-mkdocs","text":"For full documentation visit mkdocs.org .","title":"How to write mkdocs"},{"location":"howtowrite/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"howtowrite/#project-layout","text":"mkdocs.yml # The configuration file. docs / index .md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"howtowrite/#_1","text":"Note \u3053\u308c\u306f\u30ce\u30fc\u30c8\u3067\u3059\u3002 Tip \u30d2\u30f3\u30c8\u3067\u3059\u3002 Warning \u3053\u308c\u306f\u8b66\u544a\u3067\u3059 Danger \u3053\u308c\u306f\u5371\u967a\u3067\u3059\u3002 Success \u3053\u308c\u306f\u6210\u529f\u3067\u3059\u3002 Failure \u3053\u308c\u306f\u5931\u6557\u3067\u3059\u3002 Bug \u3053\u308c\u306f\u30d0\u30b0\u3067\u3059\u3002 Summary \u3053\u308c\u306f\u6982\u8981\u3067\u3059\u3002","title":"\u8b66\u544a\u6587"},{"location":"howtowrite/#fontawesome","text":"MkDocs","title":"FontAwesome"},{"location":"howtowrite/#_2","text":"\u5b9a\u7fa9\u8a9e : \u3053\u3053\u306b\u8aac\u660e\u3092\u66f8\u304d\u307e\u3059","title":"\u5b9a\u7fa9"},{"location":"howtowrite/#keyboard","text":"Ctrl + Alt + Del","title":"KeyBoard\u306e\u308f\u304b\u308a\u3084\u3059\u3044\u66f8\u304d\u65b9"},{"location":"howtowrite/#code-block","text":"package main import \"fmt\" func main() { fmt . Println( \"Hello World\" ) }","title":"Code Block"},{"location":"howtowrite/#magic-link","text":"https://google.com","title":"Magic Link"},{"location":"howtowrite/#mark","text":"mark me smart==mark","title":"Mark"},{"location":"howtowrite/#tasklist","text":"Task List item 1 item A item B more text item a item b item c item C item 2 item 3","title":"TaskList"},{"location":"linux/","text":"","title":"Linux"},{"location":"server/","text":"Server GrafanaLoki Grafana Loki Log\u3092\u53ce\u96c6\u3059\u308b Promtail Agent Loki\u306b\u5bfe\u3057\u3066\u30ed\u30b0\u3092\u8ee2\u9001 Grafana \u30c7\u30fc\u30bf\u3092\u53ef\u8996\u5316 Install (Loki + Promtail) Grafana Loki curl - fSL - o \"/usr/local/bin/loki.gz\" \"https://github.com/grafana/loki/releases/download/v0.4.0/loki-linux-amd64.gz\" gunzip \"/usr/local/bin/loki.gz\" chmod a + x \"/usr/local/bin/loki\" /etc/loki/loki-config.yaml auth_enabled : false server : http_listen_port : 3100 ingester : lifecycler : address : 127.0 . 0.1 ring : kvstore : store : inmemory replication_factor : 1 final_sleep : 0 s chunk_idle_period : 5 m chunk_retain_period : 30 s schema_config : configs : - from : 2019 - 10 - 30 store : boltdb object_store : filesystem schema : v9 index : prefix : index_ period : 168 h storage_config : boltdb : directory : /tmp/loki/i ndex filesystem : directory : /tmp/loki/ chunks limits_config : enforce_metric_name : false reject_old_samples : true reject_old_samples_max_age : 168 h chunk_store_config : max_look_back_period : 0 table_manager : chunk_tables_provisioning : inactive_read_throughput : 0 inactive_write_throughput : 0 provisioned_read_throughput : 0 provisioned_write_throughput : 0 index_tables_provisioning : inactive_read_throughput : 0 inactive_write_throughput : 0 provisioned_read_throughput : 0 provisioned_write_throughput : 0 retention_deletes_enabled : false retention_period : 0 protail(ansible\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb) roles/promtail/tasks/main.yml - name : Download promtail binary tlocal folder get_url : url : \"https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/promtail-linux-amd64.gz\" dest : \"/usr/local/bin/promtail.gz\" retries : 5 delay : 2 when : ansible_architecture = \"x86_64\" - name : Download node_exportebinary to local folder for armv7 get_url : url : \"https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/promtail-linux-arm64.gz\" dest : \"/usr/local/bin/promtail.gz\" retries : 5 delay : 2 when : ansible_architecture = \"armv7l\" - name : check promtail stat : path : / usr / local / bin / promtail register : promtail_file - name : Unpack promtail binary shell : gunzip / usr / local / bipromtail . gz when : - not promtail_file . stat . exists - name : change promtail mode file : path : / usr / local / bin / promtail owner : root group : root mode : 0755 when : - not promtail_file . stat . exists - name : Copy the promtail systemservice file copy : src : promtail . service dest : / etc / systemd / system / promtail . service owner : root group : root mode : 0644 - name : Create / etc / promtail file : path : / etc / promtail state : directory mode : 0755 - name : Copy the promtail confifile copy : src : promtail - config . yaml dest : / etc / promtail / promtail - config . yaml owner : root group : root mode : 0644 - name : replace ipaddresnode_exporter . service replace : path : / etc / promtail / promtail - config . yaml regexp : 'hostname: hostname' replace : 'hostname: {{ansible_hostname}}' - name : Enable my service systemd : name : promtail . service enabled : yes state : restarted daemon_reload : yes promtail-config.yaml hostname\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u3001host\u3054\u3068\u306elog\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3067\u304d\u308b server : http_listen_port : 9080 grpc_listen_port : 0 positions : filename : /tmp/ positions . yaml clients : - url : http : monitor . node . kanai . lab : 3100 /lokapi/v1/ push scrape_configs : - job_name : system static_configs : - targets : - localhost labels : job : varlogs __path__ : /var/log/ * log hostname : hostname promtail.service [Unit] Description = promtail [Service] Type = simple ExecStart = /usr/local/bin/promtail \\ -config.file /etc/promtail/promtail-config.yaml [Install] WantedBy = multi-user.target \u53c2\u8003 note promtail github loki sflow-rt + Vizceral sflow-rt \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c7\u30d0\u30a4\u30b9\u3001\u30db\u30b9\u30c8\u3001\u304a\u3088\u3073\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u57cb\u3081\u8fbc\u307e\u308c\u305fsFlow\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304b\u3089sflow\u306e\u60c5\u5831\u3092\u96c6\u8a08\u3057\u3001\u76e3\u8996\u7cfb\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306fsflow-rt\u306eREST API\u3092\u53e9\u304f\u3053\u3068\u3067sflow\u306e\u5024\u3092\u76e3\u8996\u3067\u304d\u308b hsflowd Host Sflow sFlow\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u4f7f\u7528\u3057\u3066\u7269\u7406\u30b5\u30fc\u30d0\u30fc\u3068\u4eee\u60f3\u30b5\u30fc\u30d0\u30fc\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30e1\u30c8\u30ea\u30c3\u30af\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 hsflowd\u3092ansible\u3067\u8907\u6570\u30de\u30b7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb (ubuntu 1804) roles/sflow/tasks/main.yml - name: Download hsflowd deb package get_url: url: \"https://github.com/sflow/host-sflow/releases/download/v {{ hsflowd_version }} /hsflowd-ubuntu18_ {{ hsflowd_version }} _amd64.deb\" dest: \"/tmp/hsflowd.deb\" retries: 5 delay: 2 - name: Install hsflowd deb apt: deb: /tmp/hsflowd.deb - name: Copy the hsflowd config file copy: src: hsflowd.conf dest: /etc/hsflowd.conf owner: root group: root mode: 0644 - name: Enable hsflowd service systemd: name: hsflowd.service enabled: yes state: restarted daemon_reload: yes /etc/hsflowd/hsflowd.conf # hsflowd configuration file # http : // sflow . nehost - sflow - linux - config . php sflow { # ====== Agent IP selection ====== # Selection is automatic , unless : # ( 1 ) override with preferred CIDR : # agent . cidr = 192 . 168 . 0 . 0 / 16 # ( 2 ) Override with interface : # agent = eth0 # ====== Sampling / PollinCollectors ====== # EITHER : automatic ( DNS SRV + TXfrom _sflow . _udp ) : # DNS - SD { } DNSSD = off # OR : manual : # Counter Polling : polling = 20 # default sampling N : sampling = 400 # sampling N on interfaces witifSpeed : # sampling . 100 M = 100 # sampling . 1 G = 1000 # sampling . 10 G = 10000 # sampling . 40 G = 40000 # sampling N for apache , nginx : # sampling . http = 50 # sampling N for applicatio ( requires json ) : # sampling . app . myapp = 100 # collectors : collector { ip =< sflow - rt iaddress > udpport = 6343 } # add additional collectors here # ====== Local configuration ====== # listen for JSON - encoded input : # json { UDPport = 36343 } # PCAP + BPF packet - sampling : # Bridge example : # pcap { dev = docker0 } # NIC example : # pcap { dev = eth0 } # pcap { dev = eth1 } # All NICs example : # pcap { speed = 1 G - 1 T } pcap { speed = 1 - } # NFLOG packet - sampling : # nflog { group = 5 probabilit = 0 . 0025 } # ULOG packet - sampling : # ulog { group = 1 probability 0 . 0025 } # PSAMPLE packet - sampling : # psample { group = 1 } # Nvidia NVML GPU monitoring : # nvml { } # Xen hypervisor and VM monitoring : # xen { } # Open vSwitch sFlow configuration : # ovs { } # KVM ( libvirt ) hypervisor and Vmonitoring : # kvm { } # Docker container monitoring : # docker { } # TCP round - trip - time / loss / jitte ( requires pcap / nflog / ulog ) tcp { } # monitoring of systemd cgroups # systemd { } # DBUS agent # dbus { } # Learn config from Arista EAPI # eapi { } } Vizceral Vizceral Netflix\u306eOSS WebGL webgl\u30ad\u30e3\u30f3\u30d0\u30b9\u306b\u4ea4\u901a\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3059 \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u91cf\u306b\u95a2\u3059\u308b\u30c7\u30fc\u30bf\u3092\u542b\u3080\u30ce\u30fc\u30c9\u3068\u30a8\u30c3\u30b8\u306e\u30b0\u30e9\u30d5\u304c\u63d0\u4f9b\u3055\u308c\u308b\u5834\u5408\u3001\u30ce\u30fc\u30c9\u9593\u306e\u63a5\u7d9a\u91cf\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u5316\u3059\u308b\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30b0\u30e9\u30d5\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b sflow-rt + vizceral Netflix Vizceral\u3092\u4f7f\u7528\u3057\u3066\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306e\u30e1\u30c8\u30ea\u30c3\u30af\u3092\u8868\u793a\u3059\u308bsFlow-RT\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30c9\u30c3\u30c8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3068\u306e\u9593\u306e\u30d1\u30b1\u30c3\u30c8\u30d5\u30ed\u30fc\u3092\u8868\u3059 \u30c9\u30c3\u30c8\u306e\u8272\u306f\u30d1\u30b1\u30c3\u30c8\u30bf\u30a4\u30d7\u3092\u8868\u3059 tcp/udp: \u30d6\u30eb\u30fc icmp: \u30a4\u30a8\u30ed\u30fc \u305d\u306e\u4ed6: \u30ec\u30c3\u30c9 Docker Makefile NAME = sflow-rt docker VERSION = 0 .0.1 run : docker run --name sflow-rt --restart = always -d -v $( PWD ) /groups.json:/sflow-rt/store/vizceral~traffic.js/groups -p 6343 :6343/udp -p 8008 :8008 sflow/vizceral -Dviz.maxVolume = 100000 clean : docker rm -f sflow-rt groups.json \u3053\u3053\u306bsflow\u306eip address\u306e\u7bc4\u56f2\u3092\u66f8\u3044\u3066\u76e3\u8996\u3067\u304d\u308b vizceral\u306e\u5186\u306e\u3068\u3053\u308d\u3092\u7ba1\u7406\u3067\u304d\u308b { \"INTERNET\" : [ \"0.0.0.0/0\" ], \"SiteA\" : [ \"10.0.0.0/16\" ] } freeipa","title":"Server"},{"location":"server/#server","text":"","title":"Server"},{"location":"server/#grafanaloki","text":"Grafana Loki Log\u3092\u53ce\u96c6\u3059\u308b Promtail Agent Loki\u306b\u5bfe\u3057\u3066\u30ed\u30b0\u3092\u8ee2\u9001 Grafana \u30c7\u30fc\u30bf\u3092\u53ef\u8996\u5316","title":"GrafanaLoki"},{"location":"server/#install-loki-promtail","text":"Grafana Loki curl - fSL - o \"/usr/local/bin/loki.gz\" \"https://github.com/grafana/loki/releases/download/v0.4.0/loki-linux-amd64.gz\" gunzip \"/usr/local/bin/loki.gz\" chmod a + x \"/usr/local/bin/loki\" /etc/loki/loki-config.yaml auth_enabled : false server : http_listen_port : 3100 ingester : lifecycler : address : 127.0 . 0.1 ring : kvstore : store : inmemory replication_factor : 1 final_sleep : 0 s chunk_idle_period : 5 m chunk_retain_period : 30 s schema_config : configs : - from : 2019 - 10 - 30 store : boltdb object_store : filesystem schema : v9 index : prefix : index_ period : 168 h storage_config : boltdb : directory : /tmp/loki/i ndex filesystem : directory : /tmp/loki/ chunks limits_config : enforce_metric_name : false reject_old_samples : true reject_old_samples_max_age : 168 h chunk_store_config : max_look_back_period : 0 table_manager : chunk_tables_provisioning : inactive_read_throughput : 0 inactive_write_throughput : 0 provisioned_read_throughput : 0 provisioned_write_throughput : 0 index_tables_provisioning : inactive_read_throughput : 0 inactive_write_throughput : 0 provisioned_read_throughput : 0 provisioned_write_throughput : 0 retention_deletes_enabled : false retention_period : 0 protail(ansible\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb) roles/promtail/tasks/main.yml - name : Download promtail binary tlocal folder get_url : url : \"https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/promtail-linux-amd64.gz\" dest : \"/usr/local/bin/promtail.gz\" retries : 5 delay : 2 when : ansible_architecture = \"x86_64\" - name : Download node_exportebinary to local folder for armv7 get_url : url : \"https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/promtail-linux-arm64.gz\" dest : \"/usr/local/bin/promtail.gz\" retries : 5 delay : 2 when : ansible_architecture = \"armv7l\" - name : check promtail stat : path : / usr / local / bin / promtail register : promtail_file - name : Unpack promtail binary shell : gunzip / usr / local / bipromtail . gz when : - not promtail_file . stat . exists - name : change promtail mode file : path : / usr / local / bin / promtail owner : root group : root mode : 0755 when : - not promtail_file . stat . exists - name : Copy the promtail systemservice file copy : src : promtail . service dest : / etc / systemd / system / promtail . service owner : root group : root mode : 0644 - name : Create / etc / promtail file : path : / etc / promtail state : directory mode : 0755 - name : Copy the promtail confifile copy : src : promtail - config . yaml dest : / etc / promtail / promtail - config . yaml owner : root group : root mode : 0644 - name : replace ipaddresnode_exporter . service replace : path : / etc / promtail / promtail - config . yaml regexp : 'hostname: hostname' replace : 'hostname: {{ansible_hostname}}' - name : Enable my service systemd : name : promtail . service enabled : yes state : restarted daemon_reload : yes promtail-config.yaml hostname\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u3001host\u3054\u3068\u306elog\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3067\u304d\u308b server : http_listen_port : 9080 grpc_listen_port : 0 positions : filename : /tmp/ positions . yaml clients : - url : http : monitor . node . kanai . lab : 3100 /lokapi/v1/ push scrape_configs : - job_name : system static_configs : - targets : - localhost labels : job : varlogs __path__ : /var/log/ * log hostname : hostname promtail.service [Unit] Description = promtail [Service] Type = simple ExecStart = /usr/local/bin/promtail \\ -config.file /etc/promtail/promtail-config.yaml [Install] WantedBy = multi-user.target","title":"Install (Loki + Promtail)"},{"location":"server/#_1","text":"note promtail github loki","title":"\u53c2\u8003"},{"location":"server/#sflow-rt-vizceral","text":"","title":"sflow-rt + Vizceral"},{"location":"server/#sflow-rt","text":"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c7\u30d0\u30a4\u30b9\u3001\u30db\u30b9\u30c8\u3001\u304a\u3088\u3073\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u57cb\u3081\u8fbc\u307e\u308c\u305fsFlow\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304b\u3089sflow\u306e\u60c5\u5831\u3092\u96c6\u8a08\u3057\u3001\u76e3\u8996\u7cfb\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306fsflow-rt\u306eREST API\u3092\u53e9\u304f\u3053\u3068\u3067sflow\u306e\u5024\u3092\u76e3\u8996\u3067\u304d\u308b","title":"sflow-rt"},{"location":"server/#hsflowd","text":"Host Sflow sFlow\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u4f7f\u7528\u3057\u3066\u7269\u7406\u30b5\u30fc\u30d0\u30fc\u3068\u4eee\u60f3\u30b5\u30fc\u30d0\u30fc\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30e1\u30c8\u30ea\u30c3\u30af\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 hsflowd\u3092ansible\u3067\u8907\u6570\u30de\u30b7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb (ubuntu 1804) roles/sflow/tasks/main.yml - name: Download hsflowd deb package get_url: url: \"https://github.com/sflow/host-sflow/releases/download/v {{ hsflowd_version }} /hsflowd-ubuntu18_ {{ hsflowd_version }} _amd64.deb\" dest: \"/tmp/hsflowd.deb\" retries: 5 delay: 2 - name: Install hsflowd deb apt: deb: /tmp/hsflowd.deb - name: Copy the hsflowd config file copy: src: hsflowd.conf dest: /etc/hsflowd.conf owner: root group: root mode: 0644 - name: Enable hsflowd service systemd: name: hsflowd.service enabled: yes state: restarted daemon_reload: yes /etc/hsflowd/hsflowd.conf # hsflowd configuration file # http : // sflow . nehost - sflow - linux - config . php sflow { # ====== Agent IP selection ====== # Selection is automatic , unless : # ( 1 ) override with preferred CIDR : # agent . cidr = 192 . 168 . 0 . 0 / 16 # ( 2 ) Override with interface : # agent = eth0 # ====== Sampling / PollinCollectors ====== # EITHER : automatic ( DNS SRV + TXfrom _sflow . _udp ) : # DNS - SD { } DNSSD = off # OR : manual : # Counter Polling : polling = 20 # default sampling N : sampling = 400 # sampling N on interfaces witifSpeed : # sampling . 100 M = 100 # sampling . 1 G = 1000 # sampling . 10 G = 10000 # sampling . 40 G = 40000 # sampling N for apache , nginx : # sampling . http = 50 # sampling N for applicatio ( requires json ) : # sampling . app . myapp = 100 # collectors : collector { ip =< sflow - rt iaddress > udpport = 6343 } # add additional collectors here # ====== Local configuration ====== # listen for JSON - encoded input : # json { UDPport = 36343 } # PCAP + BPF packet - sampling : # Bridge example : # pcap { dev = docker0 } # NIC example : # pcap { dev = eth0 } # pcap { dev = eth1 } # All NICs example : # pcap { speed = 1 G - 1 T } pcap { speed = 1 - } # NFLOG packet - sampling : # nflog { group = 5 probabilit = 0 . 0025 } # ULOG packet - sampling : # ulog { group = 1 probability 0 . 0025 } # PSAMPLE packet - sampling : # psample { group = 1 } # Nvidia NVML GPU monitoring : # nvml { } # Xen hypervisor and VM monitoring : # xen { } # Open vSwitch sFlow configuration : # ovs { } # KVM ( libvirt ) hypervisor and Vmonitoring : # kvm { } # Docker container monitoring : # docker { } # TCP round - trip - time / loss / jitte ( requires pcap / nflog / ulog ) tcp { } # monitoring of systemd cgroups # systemd { } # DBUS agent # dbus { } # Learn config from Arista EAPI # eapi { } }","title":"hsflowd"},{"location":"server/#vizceral","text":"Vizceral Netflix\u306eOSS WebGL webgl\u30ad\u30e3\u30f3\u30d0\u30b9\u306b\u4ea4\u901a\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3059 \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u91cf\u306b\u95a2\u3059\u308b\u30c7\u30fc\u30bf\u3092\u542b\u3080\u30ce\u30fc\u30c9\u3068\u30a8\u30c3\u30b8\u306e\u30b0\u30e9\u30d5\u304c\u63d0\u4f9b\u3055\u308c\u308b\u5834\u5408\u3001\u30ce\u30fc\u30c9\u9593\u306e\u63a5\u7d9a\u91cf\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u5316\u3059\u308b\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30b0\u30e9\u30d5\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b sflow-rt + vizceral Netflix Vizceral\u3092\u4f7f\u7528\u3057\u3066\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306e\u30e1\u30c8\u30ea\u30c3\u30af\u3092\u8868\u793a\u3059\u308bsFlow-RT\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30c9\u30c3\u30c8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3068\u306e\u9593\u306e\u30d1\u30b1\u30c3\u30c8\u30d5\u30ed\u30fc\u3092\u8868\u3059 \u30c9\u30c3\u30c8\u306e\u8272\u306f\u30d1\u30b1\u30c3\u30c8\u30bf\u30a4\u30d7\u3092\u8868\u3059 tcp/udp: \u30d6\u30eb\u30fc icmp: \u30a4\u30a8\u30ed\u30fc \u305d\u306e\u4ed6: \u30ec\u30c3\u30c9 Docker Makefile NAME = sflow-rt docker VERSION = 0 .0.1 run : docker run --name sflow-rt --restart = always -d -v $( PWD ) /groups.json:/sflow-rt/store/vizceral~traffic.js/groups -p 6343 :6343/udp -p 8008 :8008 sflow/vizceral -Dviz.maxVolume = 100000 clean : docker rm -f sflow-rt groups.json \u3053\u3053\u306bsflow\u306eip address\u306e\u7bc4\u56f2\u3092\u66f8\u3044\u3066\u76e3\u8996\u3067\u304d\u308b vizceral\u306e\u5186\u306e\u3068\u3053\u308d\u3092\u7ba1\u7406\u3067\u304d\u308b { \"INTERNET\" : [ \"0.0.0.0/0\" ], \"SiteA\" : [ \"10.0.0.0/16\" ] }","title":"Vizceral"},{"location":"server/#freeipa","text":"","title":"freeipa"},{"location":"terraform/","text":"","title":"Terraform"}]}